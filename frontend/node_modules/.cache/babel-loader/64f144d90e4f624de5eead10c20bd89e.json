{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\testes\\\\frontend\\\\src\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './css/Posts.css';\n\nfunction Posts() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(async () => {\n    const result = await axios('http://localhost:3000/posts/');\n    setPosts(result.posts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [\"if(posts)\", posts.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item.title\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["D:/testes/frontend/src/Posts.js"],"names":["React","useState","useEffect","axios","Posts","posts","setPosts","result","map","item","title","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMK,MAAM,GAAG,MAAMJ,KAAK,CACxB,8BADwB,CAA1B;AAGEG,IAAAA,QAAQ,CAACC,MAAM,CAACF,KAAR,CAAR;AACD,GALI,EAKF,EALE,CAAT;AAOF,sBACA;AAAA,4BAGKA,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACb;AAAA,gBACGA,IAAI,CAACC;AADR,OAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,YADD,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcD;;GAxBQP,K;;KAAAA,K;AA2BT,eAAeA,KAAf","sourcesContent":["import React , { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './css/Posts.css';\r\n\r\n\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    useEffect(async () => {\r\n        const result = await axios(\r\n          'http://localhost:3000/posts/',\r\n          );\r\n          setPosts(result.posts);\r\n        }, [])\r\n       \r\n  return (\r\n  <ul>\r\n    if(posts){\r\n\r\n       posts.map(item => (\r\n        <li key={item.id}>\r\n          {item.title}\r\n        </li>\r\n      ))\r\n    }\r\n    \r\n  </ul>\r\n      \r\n  );\r\n}\r\n\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}